AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31 # REQUIRED for AWS::Serverless
Parameters:
  LambdaEnv1:
		Description: Demo to pass cloudformation parameter to ENV of lambda
		Type: String
  ASKClientId:
 		Description: Alexa security profile Client ID : https://developer.amazon.com/settings/console/securityprofile/overview.html
    Type: String
  ASKClientSecret:
		Description: Alexa security profile Client Secret
    Type: String
  ASKRefreshToken:
		Description: Login with Amazon refresh token: `ask util generate-lwa-tokens`
    Type: String
  ASKVendorId:
    Description: A vendor ID from your developer account: `ask api list-vendors`
    Type: String
  ASKS3Bucket:
		Description: S3 bucket name to fetch the Alexa skill ZIP file from
    Type: String
  ASKS3Key:
		Description: S3 Alexa skill ZIP filename in the bucket
    Type: String

Resources:
  LambdaFunction:
  Type: AWS::Serverless::Function
  Properties:
    Handler: app
    Runtime: go1.x
    Role: !GetAtt LambdaRole.Arn
    CodeUri: ../deploy
    Events:
      AlexaSkillEvent:
        Type: AlexaSkill
    Environment:
      Variables:
        LAMBDA_ENV1: !Ref LambdaEnv1
    MemorySize: 128
    Timeout: 5
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              "sts:AssumeRole"
  LambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "cf-lambda_logs_policy"
      Roles:
      -
        Ref: "LambdaRole"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "arn:aws:rlogs:*:*:*"
  AlexaS3Role:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "login.amazon.com" # TODO: not working!
            Action:
              "sts:AssumeRole"
  AlexaS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "cf-alexa_s3_policy"
      Roles:
      -
        Ref: "AlexaS3Role"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "s3:ListBucket"
              - "s3:GetObject"
              - "s3:GetObjectVersion"
            Resource: !Join [ "", [ "arn:aws:s3:::", !Ref ASKS3Bucket ] ]
  # Skill ZIP file needs to be uploaded manually to S3 before executing cloudformation
  AlexaSkill:
    Type: Alexa::ASK::Skill
    Properties:
      AuthenticationConfiguration:
        ClientId: !Ref ASKClientId
        ClientSecret: !Ref ASKClientSecret
        RefreshToken: !Ref ASKRefreshToken
      SkillPackage:
        S3Bucket: !Ref ASKS3Bucket
        # S3BucketRole: !Ref AlexaS3Role # see above, not working!
        S3Key: !Ref ASKS3Key
        Overrides:
          Manifest:
            apis:
              custom:
                endpoint:
                  uri: !GetAtt LambdaFunction.Arn
      VendorId: !Ref ASKVendorId
